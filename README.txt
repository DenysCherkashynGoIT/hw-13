Home task №13

//-----------------------------------------------------------------------------------------------------------
//* ***************************************************************************************** *//
*      Задание 1#
*  Программа должна содержать методы для реализации следующего функционала:
*  * создание нового объекта в https://jsonplaceholder.typicode.com/users.
*      Возможно, вы не увидите обновлений на сайте. Метод создания работает правильно, если в ответ на JSON
*      с объектом вернулся такой же JSON, но с полем id со значением на 1 больше,чем самый большой id на сайте.
* * обновление объекта в https://jsonplaceholder.typicode.com/users.
*      Возможно, обновления не будут видны на сайте напрямую. Будем считать, что метод работает правильно,
*      если в ответ на запрос придет обновленный JSON (он должен быть точно таким же, какой вы отправляли).
*  * удаление объекта из https://jsonplaceholder.typicode.com/users.
*      Здесь будем считать корректным результат - статус из группы 2хх в ответ на запрос.
*  * получение информации обо всех пользователях https://jsonplaceholder.typicode.com/users
*  * получение информации о пользователе с определенным id https://jsonplaceholder.typicode.com/users/{id}
*  * получение информации о пользователе с опредленным username - https://jsonplaceholder.typicode.com/users?username={username}
*
*
*     Создан "базовый" класс HttphBaseClient, хранящий имя хоста и реализующщий базовые методы: doGET(), doPOST(),
*   doPUT(), doDELETE(). Указанные методы возвращают ответ сервера в виде экземпляра HttpResponse <Strin>.
*     Также экземпляр HttphBaseClient ответ от сервера, полученный по последнему запросу. Доступ к хранящемуся в ответу
*   можно получить через методы класса:
*               - HttpResponse<String> response() - возвращает ответ в виде экземплра HttpResponse<String>;
*               - String responseToString() - возвращает тело ответа в виде строки String;
*               - T responseToObject(Class<T> classOfT) - возвращает объект класса T,
*                                                полученного путем десериализации JSON-объекта из тела ответа;
*     Создан также пользовательский класс CustomClient, расширяющий базовый класс HttphBaseClient и реализующий методы согалсно
*   заданиям ДЗ №13.
*      Для реализации задач задания №1 определены следующие методы, соответственно:
*           HttpResponse<String> userCreate(User newUser);
*           HttpResponse<String> userUpdate(User updatingUser);
*           HttpResponse<String> userDelete(int userId);
*           HttpResponse<String> userDelete(User user);
*           HttpResponse<String> usersGet();
*           HttpResponse<String> postsGetByUserId(int userId);
*           HttpResponse<String> userGetByUsername(String username);
*
*   ^   Для удобства просмотра результата в консоли, методы вывода строк-результатов в консоль закомментирован.
*
//-----------------------------------------------------------------------------------------------------------
*       Задание 2#
*     Дополните программу методом, который будет выводить все комментарии к последнему посту определенного пользователя
*   и записывать их в файл.
*      https://jsonplaceholder.typicode.com/users/1/posts Последним будем считать пост с наибольшим id.
*      https://jsonplaceholder.typicode.com/posts/10/comments
*   Файл должен называться "user-X-post-Y-comments.json", где Х - номер пользователя, Y - номер поста.
*
*     Создан пользовательский класс CustomClient, расширяющий базовый класс HttphBaseClient и реализующий методы согалсно
*   заданиям ДЗ №13. Также создан утильный класс DataWriter для записи данных в файл.
*      Для реализации задачи задания №2 определен следующий метод класса CustomClient:
*           File commentsGetByLastPostToFile(int userId);
*
*   ^   Для удобства просмотра результата в консоли, методы вывода строк-результатов в консоль закомментирован.
*

//-----------------------------------------------------------------------------------------------------------
*       Задание 3#
*     Дополните программу методом, который будет выводить все открытые задачи для пользователя Х.
*       https://jsonplaceholder.typicode.com/users/1/todos.
*     Открытыми считаются все задачи, у которых completed = false.
*
*     Создан пользовательский класс CustomClient, расширяющий базовый класс HttphBaseClient и реализующий методы согалсно
*   заданиям ДЗ №13.
*      Для реализации задачи задания №3 определен следующий метод класса CustomClient:
*           HttpResponse<String> todosOpenGetByUserId(int userId)
*
*   ^   Для удобства просмотра результата в консоли, методы вывода строк-результатов в консоль закомментирован.
*

//-----------------------------------------------------------------------------------------------------------